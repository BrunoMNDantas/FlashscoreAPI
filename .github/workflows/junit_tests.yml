name: "JUnit Tests Workflow"

on:
  workflow_call:
    secrets:
      bot_token:
        description: "The API token used to send messages via Telegram bot"
        required: true
      chat_id:
        description: "Unique identifier of the Telegram chat"
        required: true
      s3_bucket:
        description: "S3 bucket name"
        required: true
      s3_region:
        description: "S3 region name"
        required: true
      s3_access_key:
        description: "Access Key for S3 authentication"
        required: true
      s3_secret_key:
        description: "Secret Key for S3 authentication"
        required: true

jobs:
  notify_start:
    runs-on: ubuntu-latest
    outputs:
      message_id: ${{ steps.send_notification.outputs.new_message_id }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Notify start
        id: send_notification
        uses: ./.github/actions/send_notification/
        with:
          bot_token: ${{ secrets.bot_token }}
          chat_id: ${{ secrets.chat_id }}
          message: "⚙️ Starting JUnit tests"

  run_tests:
    needs: notify_start
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Run tests
        uses: ./.github/actions/junit_tests/
        with:
          s3_bucket: ${{ secrets.s3_bucket }}
          s3_region: ${{ secrets.s3_region }}
          s3_access_key: ${{ secrets.s3_access_key }}
          s3_secret_key: ${{ secrets.s3_secret_key }}

  notify_end:
    needs: [ notify_start, run_tests ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set result message
        run: |
          if [ "${{ needs.run_tests.result }}" == "success" ]; then
            echo "MESSAGE=⚙️ JUnit tests completed successfully ✅" >> $GITHUB_ENV
          else
            echo "MESSAGE=⚙️ JUnit tests failed ❌" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Notify end
        uses: ./.github/actions/send_notification/
        with:
          bot_token: ${{ secrets.bot_token }}
          chat_id: ${{ secrets.chat_id }}
          message_id: ${{ needs.notify_start.outputs.message_id }}
          message: "${{ env.MESSAGE }}"